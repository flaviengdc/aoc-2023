import assert from "node:assert";

function adjustLights(lights) {
  const firstVersion = Array.from(new Array(lights.length)).map((_, index) =>
    index % 2 ? "游릭" : "游댮"
  );
  const secondVersion = Array.from(new Array(lights.length)).map((_, index) =>
    index % 2 ? "游댮" : "游릭"
  );

  return Math.min(
    ...lights.reduce(
      (changes, light, index) => {
        return [
          changes[0] + (light === firstVersion[index] ? 0 : 1),
          changes[1] + (light === secondVersion[index] ? 0 : 1),
        ];
      },
      [0, 0]
    )
  );
}

assert(adjustLights(["游릭", "游댮", "游릭", "游릭", "游릭"]) === 1);
// -> 1 (you change the fourth light to 游댮)

assert(adjustLights(["游댮", "游댮", "游릭", "游릭", "游댮"]) === 2);
// -> 2 (you change the second light to 游릭 and the third to 游댮)

assert(adjustLights(["游릭", "游댮", "游릭", "游댮", "游릭"]) === 0);
// -> 0 (they are already alternating)

assert(adjustLights(["游댮", "游댮", "游댮"]) === 1);
// -> 1 (you change the second light to 游릭)
